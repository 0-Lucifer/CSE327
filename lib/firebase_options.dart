// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Provides default [FirebaseOptions] for initializing Firebase in the app.
///
/// This class contains platform-specific Firebase configuration options for
/// web, Android, iOS, and Windows platforms. It is typically used to initialize
/// Firebase with the appropriate configuration for the current platform.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  /// Returns the [FirebaseOptions] for the current platform.
  ///
  /// Determines the platform at runtime and returns the corresponding Firebase
  /// configuration. Throws an [UnsupportedError] for unsupported platforms
  /// (macOS, Linux).
  static FirebaseOptions get currentPlatform {
    // Check if running on web
    if (kIsWeb) {
      return web;
    }
    // Switch based on the target platform
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  /// Firebase configuration options for the web platform.
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAT0S9minMd0mmyfb9xjiCFPX-O5hKLx6Q',
    appId: '1:992729470612:web:4cc139628ef7d057d0c681',
    messagingSenderId: '992729470612',
    projectId: 'tourify-222',
    authDomain: 'tourify-222.firebaseapp.com',
    storageBucket: 'tourify-222.firebasestorage.app',
    measurementId: 'G-JLN1GZCF71',
  );

  /// Firebase configuration options for the Android platform.
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAT0S9minMd0mmyfb9xjiCFPX-O5hKLx6Q',
    appId: '1:992729470612:android:0be7dfc054bf786ad0c681',
    messagingSenderId: '992729470612',
    projectId: 'tourify-222',
    storageBucket: 'tourify-222.firebasestorage.app',
    measurementId: 'G-JLN1GZCF71',
  );

  /// Firebase configuration options for the iOS platform.
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAT0S9minMd0mmyfb9xjiCFPX-O5hKLx6Q',
    appId: '1:992729470612:ios:fb98a2df64ab925cd0c681',
    messagingSenderId: '992729470612',
    projectId: 'tourify-222',
    storageBucket: 'tourify-222.firebasestorage.app',
    iosBundleId: 'com.example.tourify',
    measurementId: 'G-JLN1GZCF71',
  );

  /// Firebase configuration options for the Windows platform.
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyAT0S9minMd0mmyfb9xjiCFPX-O5hKLx6Q',
    appId: '1:992729470612:windows:someuniqueid', // Replace with actual Windows appId
    messagingSenderId: '992729470612',
    projectId: 'tourify-222',
    authDomain: 'tourify-222.firebaseapp.com',
    storageBucket: 'tourify-222.firebasestorage.app',
    measurementId: 'G-JLN1GZCF71',
  );
}